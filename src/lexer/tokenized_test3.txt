Token               Lexeme
------------------------------
separator           $
keyword             function
identifier          factorial
separator           (
identifier          n
keyword             integer
separator           )
separator           {
keyword             if
separator           (
identifier          n
operator            ==
int                 0
separator           )
separator           {
keyword             return
int                 1
separator           ;
separator           }
keyword             else
separator           {
keyword             integer
identifier          result
separator           ;
identifier          result
operator            =
int                 1
separator           ;
keyword             integer
identifier          i
separator           ;
identifier          i
operator            =
int                 1
separator           ;
keyword             while
separator           (
identifier          i
operator            <=
identifier          n
separator           )
separator           {
identifier          result
operator            =
identifier          result
operator            *
identifier          i
separator           ;
identifier          i
operator            =
identifier          i
operator            +
int                 1
separator           ;
separator           }
keyword             return
identifier          result
separator           ;
separator           }
separator           }
separator           $
keyword             integer
identifier          n
separator           ;
keyword             integer
identifier          result
separator           ;
keyword             scan
separator           (
identifier          n
separator           )
separator           ;
identifier          result
operator            =
identifier          factorial
separator           (
identifier          n
separator           )
separator           ;
keyword             print
separator           (
identifier          result
separator           )
separator           ;
separator           $